%headerButton {
  min-height: rem-calc(54);
  padding: $global-padding;
  position: relative;
  display: inline-flex;
  align-items: center;
  border-width: 0;
  background: transparent;
  line-height: rem-calc(22);
  font-size: rem-calc(14);
  color: $white;

  > svg {
    max-width: rem-calc(20);
    max-height: rem-calc(20);
  }
}

%backButton {
  display: inline-flex;
  width: rem-calc(60);
  height: rem-calc(60);
  border-radius: 50%;
  background-color: transparent;
  border: 1px solid $gray-light-2;
}

%backButton--centered {
  @extend %backButton;
  justify-content: center;
  align-items: center;
}

%baseButton {
  display: inline-block;
  padding: rem-calc(5) rem-calc(14);
  font-size: $medium-small-font-size;
  line-height: 1.5;
  border-radius: $global-radius;
  white-space: nowrap;
}

%baseButton--white {
  @extend %baseButton;
  color: $gray-dark;
  background: $white-dark;
  border: rem-calc(1) solid $gray-med-dark-2;

  > svg path {
    fill: $gray-dark;
  }

  &:hover {
    color: $primary-color;

    > svg path {
      fill: $primary-color;
    }
  }
}

%baseButton--gray {
  @extend %baseButton;
  color: $white;
  background: $gray-light-2;
  border: rem-calc(1) solid $gray-light-2;

  > svg path {
    fill: $white;
  }
}

%actionButton {
  @extend %baseButton;
  color: $success-color;
  background: $gray-light;
  border: 0;
  padding: rem-calc(5.4) rem-calc(16) rem-calc(3.6);
  text-transform: uppercase;

  > svg path {
    fill: $white;
  }
}

%actionButton--line {
  @extend %actionButton;
  background: transparent;
  border: rem-calc(1) solid $success-color;
  border-radius: rem-calc(3);
}

%actionButton--red {
  @extend %actionButton;
  color: $alert-color;
}

%actionButton--redLine {
  @extend %actionButton--red;
  background: transparent;
  border: rem-calc(1) solid $alert-color;
  border-radius: rem-calc(3);
}

%actionButton--black {
  @extend %actionButton;
  background-color: $black;
  color: $white;
}

%actionButton--blackText {
  @extend %actionButton;
  background: transparent;
  color: $black;
}

%baseButton__chevron {
  display: inline-block;
  height: rem-calc(12);
  transform: translateY(#{rem-calc(2)});
}

//
// Icon Button
//

%iconButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: rem-calc(28);
  height: rem-calc(28);
  font-size: $medium-small-font-size;
  background-color: lighten($info-color, 15);
  color: $primary-color;
  border-radius: 100%;
  border-width: 0;
  white-space: nowrap;

  > svg {
    max-width: 66.66%;
    max-height: 66.66%;
  }
}

//
// Outline Button
//

%outlineButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0 $global-padding;
  height: rem-calc(38);
  background-color: transparent;
  color: $primary-color;
  border: 1px solid $primary-color;
  outline-width: 0;
  border-radius: rem-calc(19);
  font-size: $medium-font-size;
}

//
// Close Button
//
// previous .spk-close-butto
%closeButton {
  position: absolute;
  color: $gray-light;
  top: 1rem;
  right: 1rem;
  font-size: 2em;
  line-height: 0.5;
  transition: all 200ms linear;
  cursor: pointer;

  &:hover {
    color: $gray-dark;
  }
}

//
// Flexy Button
//

// previous .spk-flexy-button
%flexButton {
  display: flex;
  text-align: center;
  align-self: stretch;
  justify-content: flex-end;
  padding: 0 $global-padding;
  color: $white;
  border-width: 0;
  background-color: $primary-dark-color;

  &:hover,
  &:focus {
    color: $white;
  }
}

// previous .spk-flexy-button.alert
%flexButton--alert {
  background-color: $alert-color;
}

// previous .spk-flexy-button.info
%flexButton--info {
  background-color: $info-color;
}

//
// Hollow Button
//
// previous .hollowButton
%hollowButton {
  @include button(
    medium,
    // size
    true,
    // expand
    transparent,
    // background
    transparent,
    // background-hover
    $primary-color,
    // color
    solid,
    // style
    $global-radius // radius
  );

  border: rem-calc(1) $primary-color solid;
}
// previous .hollowButton.-grayDark
%hollowButton--grayDark {
  @extend %hollowButton;

  color: $gray-dark;
  border-color: $gray-dark;
}

// previous .hollowButton.-thick
%hollowButton--thick {
  @extend %hollowButton;

  padding-top: rem-calc(12);
  padding-bottom: rem-calc(12);
  border-width: rem-calc(2);
  font-weight: bold;
}

//
// Non Button
//
// previous .spk-non-button, .-unstyledButton
%unstyledButton {
  padding: 0;
  background: transparent;
  border-width: 0;
}

//
// Pill Button
//

// previous .spk-pill-button
%pillButton {
  @include button(
    tiny,
    // size
    true,
    // expand
    $info-color,
    // background
    $info-color,
    // background-hover
    $white,
    // color
    solid,
    // style
    $global-radius // radius
  );

  margin: 0;
  padding: ($global-xsm-padding * 1.8) $global-padding
    ($global-xsm-padding * 1.2);
  font-size: $medium-font-size;
  text-align: center;
  text-transform: uppercase;
  white-space: nowrap;
}

//
// Gray Button
//

// previous .button.gray
%grayButton {
  @extend .button;
  background-color: $gray;
  color: $body-font-color;

  &:hover {
    background-color: darken($gray, 25);
  }
}

%textDeleteButton {
  font-size: $medium-small-font-size;
  color: $gray-darker;
  background: transparent;
  border: none;
  text-decoration: underline;

  &:hover {
    color: $alert-color;
  }
}

//
// Sort Button
//

%sortDirButton {
  width: rem-calc(30);
  height: rem-calc(30);
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-width: 0;
  background: transparent;
  transform: translateY(rem-calc(-3));

  // Toggle sort arrows
  &::before,
  &::after {
    height: rem-calc(10);
    display: block;
    color: $gray-dark;
  }

  &::before {
    content: '\25BF';
    transform: rotate(180deg) translateY(rem-calc(-3));
  }

  &::after {
    content: '\25BF';
    transform: translateY(rem-calc(-4));
  }

  // Set bottom arrow
  &.-desc {
    &::before {
      display: block;
    }
    &::after {
      content: '\25BE';
    }
  }

  // Set top arrow
  &.-asc {
    &::after {
      display: block;
    }
    &::before {
      content: '\25BE';
    }
  }
}
